// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://antsyn_possupannu_user:yMChksl6A0f0XUUFhglHjSqzqhdXTjio@dpg-cln12bnfeb2c73eekghg-a.frankfurt-postgres.render.com/chat_with_repo"
}
model User {
  id            String       @id @default(cuid())
  email         String       @unique
  ipAddress     String?      // For unauthenticated users
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  rateLimit     RateLimit?
  subscription  Subscription?
}

model RateLimit {
  id            String   @id @default(cuid())
  userId        String   @unique
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  messageCount  Int      @default(0)
  lastReset     DateTime @default(now())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Subscription {
  id            String   @id @default(cuid())
  userId        String   @unique
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  isActive      Boolean  @default(false)
  stripeCustomerId String? @unique
  stripeSubscriptionId String? @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
